from aiogram import Router, F
from aiogram.types import Message, CallbackQuery, ReplyKeyboardMarkup, KeyboardButton, ReplyKeyboardRemove
from aiogram.filters import CommandStart, Command
from aiogram.fsm.context import FSMContext
from aiogram.fsm.state import State, StatesGroup

from keyboards.main_keyboards import get_main_menu, get_back_to_menu_keyboard
from utils.messages import WELCOME_MESSAGE, CONTACT_INFO
from utils.cart import get_user_cart, get_cart_total
from utils.database import update_user_data, get_user_data
from keyboards.cart_keyboards import get_checkout_keyboard

router = Router()

class UserRegistrationState(StatesGroup):
    waiting_for_phone = State()

class UserProfileState(StatesGroup):
    waiting_for_phone = State()
    waiting_for_name = State()
    waiting_for_address = State()

@router.message(CommandStart())
async def start_command(message: Message, state: FSMContext):
    """–û–±—Ä–æ–±–∫–∞ –∫–æ–º–∞–Ω–¥–∏ /start - –∑–∞–ø–∏—Ç –Ω–æ–º–µ—Ä–∞ —Ç–µ–ª–µ—Ñ–æ–Ω—É"""
    await state.clear()
    
    # –°—Ç–≤–æ—Ä—é—î–º–æ –∫–ª–∞–≤—ñ–∞—Ç—É—Ä—É –¥–ª—è –ø–µ—Ä–µ–¥–∞—á—ñ –Ω–æ–º–µ—Ä–∞ —Ç–µ–ª–µ—Ñ–æ–Ω—É
    phone_keyboard = ReplyKeyboardMarkup(
        keyboard=[
            [KeyboardButton(text="üì± –ü–æ–¥—ñ–ª–∏—Ç–∏—Å—è –Ω–æ–º–µ—Ä–æ–º", request_contact=True)]
        ],
        resize_keyboard=True,
        one_time_keyboard=True
    )
    
    await message.answer(
        "üëã <b>–†–æ–∑–ø–æ—á–∞—Ç–∏ —Ä–æ–±–æ—Ç—É –∑ CleanWay</b>\n\n"
        "–î–ª—è –ø–æ—á–∞—Ç–∫—É —Ä–æ–±–æ—Ç–∏, –±—É–¥—å –ª–∞—Å–∫–∞, –ø–æ–¥—ñ–ª—ñ—Ç—å—Å—è —Å–≤–æ—ó–º –Ω–æ–º–µ—Ä–æ–º —Ç–µ–ª–µ—Ñ–æ–Ω—É.\n"
        "–¶–µ –¥–æ–ø–æ–º–æ–∂–µ –Ω–∞–º –∫—Ä–∞—â–µ –æ–±—Å–ª—É–≥–æ–≤—É–≤–∞—Ç–∏ –≤–∞—Å —Ç–∞ –ø–æ–≤—ñ–¥–æ–º–ª—è—Ç–∏ –ø—Ä–æ —Å—Ç–∞—Ç—É—Å –∑–∞–º–æ–≤–ª–µ–Ω—å.",
        reply_markup=phone_keyboard,
        parse_mode="HTML"
    )
    
    await state.set_state(UserRegistrationState.waiting_for_phone)

@router.message(UserRegistrationState.waiting_for_phone, F.contact)
async def process_phone_contact(message: Message, state: FSMContext):
    """–û–±—Ä–æ–±–∫–∞ –æ—Ç—Ä–∏–º–∞–Ω–æ–≥–æ –Ω–æ–º–µ—Ä–∞ —Ç–µ–ª–µ—Ñ–æ–Ω—É"""
    phone_number = message.contact.phone_number
    user_id = message.from_user.id
    
    # –ó–±–µ—Ä—ñ–≥–∞—î–º–æ –Ω–æ–º–µ—Ä —Ç–µ–ª–µ—Ñ–æ–Ω—É –∫–æ—Ä–∏—Å—Ç—É–≤–∞—á–∞
    user_data = {
        'phone': phone_number,
        'first_name': message.from_user.first_name or '',
        'last_name': message.from_user.last_name or '',
        'username': message.from_user.username or ''
    }
    update_user_data(user_id, user_data)
    
    # –ü–æ–≤—ñ–¥–æ–º–ª—è—î–º–æ –∞–¥–º—ñ–Ω—ñ—Å—Ç—Ä–∞—Ç–æ—Ä–∞ –ø—Ä–æ –Ω–æ–≤–æ–≥–æ –∫–æ—Ä–∏—Å—Ç—É–≤–∞—á–∞
    import os
    admin_id = int(os.getenv('ADMIN_ID', '8095681158'))
    
    admin_text = (
        "üë§ <b>–ù–æ–≤–∏–π –∫–æ—Ä–∏—Å—Ç—É–≤–∞—á –∑–∞—Ä–µ—î—Å—Ç—Ä–æ–≤–∞–Ω–∏–π!</b>\n\n"
        f"üÜî ID: {user_id}\n"
        f"üë§ –Ü–º'—è: {message.from_user.first_name or '–ù–µ–≤—ñ–¥–æ–º–æ'} {message.from_user.last_name or ''}\n"
        f"üì± Username: @{message.from_user.username or '–Ω–µ–º–∞—î'}\n"
        f"üìû –¢–µ–ª–µ—Ñ–æ–Ω: {phone_number}"
    )
    
    try:
        await message.bot.send_message(chat_id=admin_id, text=admin_text, parse_mode="HTML")
        print(f"‚úÖ –ü–æ–≤—ñ–¥–æ–º–ª–µ–Ω–Ω—è –ø—Ä–æ –Ω–æ–≤–æ–≥–æ –∫–æ—Ä–∏—Å—Ç—É–≤–∞—á–∞ –Ω–∞–¥—ñ—Å–ª–∞–Ω–æ –∞–¥–º—ñ–Ω—É")
    except Exception as e:
        print(f"‚ùå –ù–µ –≤–¥–∞–ª–æ—Å—è –Ω–∞–¥—ñ—Å–ª–∞—Ç–∏ –ø–æ–≤—ñ–¥–æ–º–ª–µ–Ω–Ω—è –∞–¥–º—ñ–Ω—É: {e}")
    
    await state.clear()
    
    # –ü–æ–∫–∞–∑—É—î–º–æ –≤—ñ—Ç–∞–ª—å–Ω–µ –ø–æ–≤—ñ–¥–æ–º–ª–µ–Ω–Ω—è —Ç–∞ –≥–æ–ª–æ–≤–Ω–µ –º–µ–Ω—é
    await message.answer(
        WELCOME_MESSAGE,
        reply_markup=get_main_menu(),
        parse_mode="HTML"
    )

@router.message(UserRegistrationState.waiting_for_phone)
async def invalid_phone_input(message: Message):
    """–û–±—Ä–æ–±–∫–∞ –Ω–µ–∫–æ—Ä–µ–∫—Ç–Ω–æ–≥–æ –≤–≤–æ–¥—É –Ω–æ–º–µ—Ä–∞ —Ç–µ–ª–µ—Ñ–æ–Ω—É"""
    phone_keyboard = ReplyKeyboardMarkup(
        keyboard=[
            [KeyboardButton(text="üì± –ü–æ–¥—ñ–ª–∏—Ç–∏—Å—è –Ω–æ–º–µ—Ä–æ–º", request_contact=True)]
        ],
        resize_keyboard=True,
        one_time_keyboard=True
    )
    
    await message.answer(
        "üì± –ë—É–¥—å –ª–∞—Å–∫–∞, –Ω–∞—Ç–∏—Å–Ω—ñ—Ç—å –∫–Ω–æ–ø–∫—É \"üì± –ü–æ–¥—ñ–ª–∏—Ç–∏—Å—è –Ω–æ–º–µ—Ä–æ–º\" –¥–ª—è –ø–µ—Ä–µ–¥–∞—á—ñ –≤–∞—à–æ–≥–æ –Ω–æ–º–µ—Ä–∞ —Ç–µ–ª–µ—Ñ–æ–Ω—É.",
        reply_markup=phone_keyboard
    )

@router.message(F.text == "üîô –ü–æ–≤–µ—Ä–Ω—É—Ç–∏—Å—è –≤ –º–µ–Ω—é")
async def back_to_menu(message: Message, state: FSMContext):
    """–ü–æ–≤–µ—Ä–Ω–µ–Ω–Ω—è –≤ –≥–æ–ª–æ–≤–Ω–µ –º–µ–Ω—é"""
    await state.clear()
    
    await message.answer(
        "üè† <b>–ì–æ–ª–æ–≤–Ω–µ –º–µ–Ω—é</b>\n\n"
        "–û–±–µ—Ä—ñ—Ç—å –ø–æ—Ç—Ä—ñ–±–Ω–∏–π —Ä–æ–∑–¥—ñ–ª:",
        reply_markup=get_main_menu(),
        parse_mode="HTML"
    )

@router.message(F.text == "üìû –ö–æ–Ω—Ç–∞–∫—Ç–∏")
async def contact_info(message: Message):
    """–ü–æ–≤–Ω–∞ –∫–æ–Ω—Ç–∞–∫—Ç–Ω–∞ —ñ–Ω—Ñ–æ—Ä–º–∞—Ü—ñ—è"""
    await message.answer(
        CONTACT_INFO,
        reply_markup=get_back_to_menu_keyboard(),
        parse_mode="HTML"
    )

@router.message(F.text == "üë§ –ú–æ—î")
async def my_profile(message: Message, state: FSMContext):
    """–ü—Ä–æ—Ñ—ñ–ª—å –∫–æ—Ä–∏—Å—Ç—É–≤–∞—á–∞ - —Ä–µ–¥–∞–≥—É–≤–∞–Ω–Ω—è –¥–∞–Ω–∏—Ö"""
    user_id = message.from_user.id
    user_data = get_user_data(user_id)
    
    current_phone = user_data.get('phone', '–ù–µ –≤–∫–∞–∑–∞–Ω–æ')
    current_name = user_data.get('name', '–ù–µ –≤–∫–∞–∑–∞–Ω–æ')
    current_address = user_data.get('address', '–ù–µ –≤–∫–∞–∑–∞–Ω–æ')
    
    profile_text = (
        "üë§ <b>–ú—ñ–π –ø—Ä–æ—Ñ—ñ–ª—å</b>\n\n"
        f"üìû –¢–µ–ª–µ—Ñ–æ–Ω: {current_phone}\n"
        f"üë§ –Ü–º'—è: {current_name}\n"
        f"üìç –ê–¥—Ä–µ—Å–∞: {current_address}\n\n"
        "–í–≤–µ–¥—ñ—Ç—å –≤–∞—à –Ω–æ–º–µ—Ä —Ç–µ–ª–µ—Ñ–æ–Ω—É:"
    )
    
    await message.answer(
        profile_text,
        reply_markup=get_back_to_menu_keyboard(),
        parse_mode="HTML"
    )
    
    await state.set_state(UserProfileState.waiting_for_phone)

@router.message(UserProfileState.waiting_for_phone)
async def update_phone(message: Message, state: FSMContext):
    """–û–Ω–æ–≤–ª–µ–Ω–Ω—è –Ω–æ–º–µ—Ä–∞ —Ç–µ–ª–µ—Ñ–æ–Ω—É"""
    phone = message.text.strip()
    
    if not phone or phone == "üîô –ü–æ–≤–µ—Ä–Ω—É—Ç–∏—Å—è –≤ –º–µ–Ω—é":
        await back_to_menu(message, state)
        return
    
    await state.update_data(phone=phone)
    
    await message.answer(
        "üë§ –¢–µ–ø–µ—Ä –≤–≤–µ–¥—ñ—Ç—å –≤–∞—à–µ –ø–æ–≤–Ω–µ —ñ–º'—è:",
        reply_markup=get_back_to_menu_keyboard()
    )
    
    await state.set_state(UserProfileState.waiting_for_name)

@router.message(UserProfileState.waiting_for_name)
async def update_name(message: Message, state: FSMContext):
    """–û–Ω–æ–≤–ª–µ–Ω–Ω—è —ñ–º–µ–Ω—ñ"""
    name = message.text.strip()
    
    if not name or name == "üîô –ü–æ–≤–µ—Ä–Ω—É—Ç–∏—Å—è –≤ –º–µ–Ω—é":
        await back_to_menu(message, state)
        return
    
    await state.update_data(name=name)
    
    await message.answer(
        "üìç –¢–µ–ø–µ—Ä –≤–≤–µ–¥—ñ—Ç—å –∞–¥—Ä–µ—Å—É –¥–æ—Å—Ç–∞–≤–∫–∏:\n\n"
        "–ù–∞–ø—Ä–∏–∫–ª–∞–¥:\n"
        "‚Ä¢ –ù–æ–≤–∞ –ü–æ—à—Ç–∞ ‚Ññ5, –¢–µ—Ä–Ω–æ–ø—ñ–ª—å\n"
        "‚Ä¢ –£–∫—Ä–ø–æ—à—Ç–∞, –≤—É–ª. –†—É—Å—å–∫–∞ 10, –¢–µ—Ä–Ω–æ–ø—ñ–ª—å\n"
        "‚Ä¢ –°–∞–º–æ–≤–∏–≤—ñ–∑ –∑ –º–∞–≥–∞–∑–∏–Ω—É",
        reply_markup=get_back_to_menu_keyboard()
    )
    
    await state.set_state(UserProfileState.waiting_for_address)

@router.message(UserProfileState.waiting_for_address)
async def update_address(message: Message, state: FSMContext):
    """–û–Ω–æ–≤–ª–µ–Ω–Ω—è –∞–¥—Ä–µ—Å–∏"""
    address = message.text.strip()
    
    if not address or address == "üîô –ü–æ–≤–µ—Ä–Ω—É—Ç–∏—Å—è –≤ –º–µ–Ω—é":
        await back_to_menu(message, state)
        return
    
    # –û—Ç—Ä–∏–º—É—î–º–æ –≤—Å—ñ –¥–∞–Ω—ñ
    data = await state.get_data()
    phone = data.get('phone')
    name = data.get('name')
    
    # –ó–±–µ—Ä—ñ–≥–∞—î–º–æ –¥–∞–Ω—ñ –∫–æ—Ä–∏—Å—Ç—É–≤–∞—á–∞
    user_id = message.from_user.id
    update_user_data(user_id, {
        'phone': phone,
        'name': name,
        'address': address
    })
    
    await state.clear()
    
    success_text = (
        "‚úÖ <b>–ü—Ä–æ—Ñ—ñ–ª—å –æ–Ω–æ–≤–ª–µ–Ω–æ!</b>\n\n"
        f"üìû –¢–µ–ª–µ—Ñ–æ–Ω: {phone}\n"
        f"üë§ –Ü–º'—è: {name}\n"
        f"üìç –ê–¥—Ä–µ—Å–∞: {address}\n\n"
        "–¢–µ–ø–µ—Ä –≤–∏ –º–æ–∂–µ—Ç–µ —à–≤–∏–¥–∫–æ –æ—Ñ–æ—Ä–º–ª—è—Ç–∏ –∑–∞–º–æ–≤–ª–µ–Ω–Ω—è!"
    )
    
    await message.answer(
        success_text,
        reply_markup=get_main_menu(),
        parse_mode="HTML"
    )

@router.message(F.text == "üí≥ QR –∫–∞—Ä—Ç–∞")
async def qr_card(message: Message):
    """QR –∫–∞—Ä—Ç–∞ –∫–æ—Ä–∏—Å—Ç—É–≤–∞—á–∞ –∑ –±–∞–ª–∞–º–∏ —Ç–∞ –∫—É–ø–æ–Ω–∞–º–∏"""
    user_id = message.from_user.id
    user_data = get_user_data(user_id)
    
    # –û—Ç—Ä–∏–º—É—î–º–æ –±–∞–ª–∏ –ª–æ—è–ª—å–Ω–æ—Å—Ç—ñ
    from utils.loyalty import get_user_loyalty_points
    loyalty_points = get_user_loyalty_points(user_id)
    
    # –ì–µ–Ω–µ—Ä—É—î–º–æ —É–Ω—ñ–∫–∞–ª—å–Ω–∏–π QR –∫–æ–¥ –¥–ª—è –∫–æ—Ä–∏—Å—Ç—É–≤–∞—á–∞
    qr_code = f"CW{user_id:08d}"
    
    from aiogram.types import InlineKeyboardMarkup, InlineKeyboardButton
    
    keyboard = InlineKeyboardMarkup(
        inline_keyboard=[
            [
                InlineKeyboardButton(text="üéü –ú–æ—ó –∫—É–ø–æ–Ω–∏", callback_data="my_coupons"),
                InlineKeyboardButton(text="üéÅ –ê–∫—Ü—ñ—ó", callback_data="show_promotions")
            ],
            [
                InlineKeyboardButton(text="üìä –Ü—Å—Ç–æ—Ä—ñ—è –±–∞–ª—ñ–≤", callback_data="points_history")
            ],
            [
                InlineKeyboardButton(text="üîô –ì–æ–ª–æ–≤–Ω–µ –º–µ–Ω—é", callback_data="back_to_menu")
            ]
        ]
    )
    
    qr_text = (
        f"üí≥ <b>–í–∞—à–∞ QR –∫–∞—Ä—Ç–∞ CleanWay</b>\n\n"
        f"üÜî –ù–æ–º–µ—Ä –∫–∞—Ä—Ç–∏: <code>{qr_code}</code>\n"
        f"üë§ –í–ª–∞—Å–Ω–∏–∫: {user_data.get('name', '–ù–µ –≤–∫–∞–∑–∞–Ω–æ')}\n"
        f"üìû –¢–µ–ª–µ—Ñ–æ–Ω: {user_data.get('phone', '–ù–µ –≤–∫–∞–∑–∞–Ω–æ')}\n\n"
        f"üíé <b>–í–∞—à—ñ –±–∞–ª–∏: {loyalty_points}</b>\n"
        f"üí∞ –ï–∫–≤—ñ–≤–∞–ª–µ–Ω—Ç: {loyalty_points} –≥—Ä–Ω –∑–Ω–∏–∂–∫–∏\n\n"
        f"üéØ <b>–ü—Ä–æ–≥—Ä–∞–º–∞ –ª–æ—è–ª—å–Ω–æ—Å—Ç—ñ:</b>\n"
        f"‚Ä¢ 5% –∫–µ—à–±–µ–∫ –∑ –∫–æ–∂–Ω–æ—ó –ø–æ–∫—É–ø–∫–∏\n"
        f"‚Ä¢ 1 –±–∞–ª = 1 –≥—Ä–Ω –∑–Ω–∏–∂–∫–∏\n"
        f"‚Ä¢ –°–ø–µ—Ü—ñ–∞–ª—å–Ω—ñ –ø—Ä–æ–ø–æ–∑–∏—Ü—ñ—ó –¥–ª—è VIP –∫–ª—ñ—î–Ω—Ç—ñ–≤\n\n"
        f"üì± –ü–æ–∫–∞–∂—ñ—Ç—å —Ü–µ–π QR –∫–æ–¥ –∫–∞—Å–∏—Ä—É –¥–ª—è –Ω–∞—Ä–∞—Ö—É–≤–∞–Ω–Ω—è –±–∞–ª—ñ–≤!"
    )
    
    await message.answer(
        qr_text,
        reply_markup=keyboard,
        parse_mode="HTML"
    )

@router.callback_query(F.data == "my_coupons")
async def show_my_coupons(callback: CallbackQuery):
    """–ü–æ–∫–∞–∑–∞—Ç–∏ –∫—É–ø–æ–Ω–∏ –∫–æ—Ä–∏—Å—Ç—É–≤–∞—á–∞"""
    user_id = callback.from_user.id
    
    # –¢—É—Ç –±–∏ –±—É–ª–∞ –ª–æ–≥—ñ–∫–∞ –æ—Ç—Ä–∏–º–∞–Ω–Ω—è –∫—É–ø–æ–Ω—ñ–≤ –∫–æ—Ä–∏—Å—Ç—É–≤–∞—á–∞
    # –ü–æ–∫–∏ —â–æ –ø–æ–∫–∞–∑—É—î–º–æ –¥–æ—Å—Ç—É–ø–Ω—ñ –∫—É–ø–æ–Ω–∏
    
    from aiogram.types import InlineKeyboardMarkup, InlineKeyboardButton
    
    keyboard = InlineKeyboardMarkup(
        inline_keyboard=[
            [
                InlineKeyboardButton(text="üéÅ –ü–µ—Ä–µ–≥–ª—è–Ω—É—Ç–∏ –∞–∫—Ü—ñ—ó", callback_data="show_promotions")
            ],
            [
                InlineKeyboardButton(text="üîô –ù–∞–∑–∞–¥ –¥–æ QR –∫–∞—Ä—Ç–∏", callback_data="back_to_qr")
            ]
        ]
    )
    
    coupons_text = (
        "üéü <b>–í–∞—à—ñ –∫—É–ø–æ–Ω–∏</b>\n\n"
        "–£ –≤–∞—Å –ø–æ–∫–∏ –Ω–µ–º–∞—î –∞–∫—Ç–∏–≤–Ω–∏—Ö –∫—É–ø–æ–Ω—ñ–≤.\n\n"
        "üí° <b>–Ø–∫ –æ—Ç—Ä–∏–º–∞—Ç–∏ –∫—É–ø–æ–Ω–∏:</b>\n"
        "‚Ä¢ –†–æ–±—ñ—Ç—å –ø–æ–∫—É–ø–∫–∏ —Ç–∞ –Ω–∞–∫–æ–ø–∏—á—É–π—Ç–µ –±–∞–ª–∏\n"
        "‚Ä¢ –°–ª—ñ–¥–∫—É–π—Ç–µ –∑–∞ –∞–∫—Ü—ñ—è–º–∏ –≤ —Ä–æ–∑–¥—ñ–ª—ñ \"üéÅ –ê–∫—Ü—ñ—ó\"\n"
        "‚Ä¢ –ü—ñ–¥–ø–∏—Å—É–π—Ç–µ—Å—å –Ω–∞ –Ω–∞—à—ñ —Å–æ—Ü—ñ–∞–ª—å–Ω—ñ –º–µ—Ä–µ–∂—ñ\n\n"
        "üéØ –ü–µ—Ä–µ–≥–ª—è–Ω—å—Ç–µ –ø–æ—Ç–æ—á–Ω—ñ –∞–∫—Ü—ñ—ó, —â–æ–± –Ω–µ –ø—Ä–æ–ø—É—Å—Ç–∏—Ç–∏ –≤–∏–≥—ñ–¥–Ω—ñ –ø—Ä–æ–ø–æ–∑–∏—Ü—ñ—ó!"
    )
    
    await callback.message.edit_text(
        coupons_text,
        reply_markup=keyboard,
        parse_mode="HTML"
    )
    await callback.answer()

@router.callback_query(F.data == "show_promotions")
async def show_promotions(callback: CallbackQuery):
    """–ü–æ–∫–∞–∑–∞—Ç–∏ –∞–∫—Ü—ñ—ó —Ç–∞ –∑–Ω–∏–∂–∫–∏"""
    from aiogram.types import InlineKeyboardMarkup, InlineKeyboardButton
    
    keyboard = InlineKeyboardMarkup(
        inline_keyboard=[
            [
                InlineKeyboardButton(text="üõç –ü–µ—Ä–µ–π—Ç–∏ –¥–æ –∫–∞—Ç–∞–ª–æ–≥—É", callback_data="show_catalog")
            ],
            [
                InlineKeyboardButton(text="üîô –ù–∞–∑–∞–¥", callback_data="back_to_qr")
            ]
        ]
    )
    
    promotions_text = (
        "üéÅ <b>–ü–æ—Ç–æ—á–Ω—ñ –∞–∫—Ü—ñ—ó —Ç–∞ –∑–Ω–∏–∂–∫–∏</b>\n\n"
        "üî• <b>–ì–∞—Ä—è—á—ñ –ø—Ä–æ–ø–æ–∑–∏—Ü—ñ—ó:</b>\n\n"
        "1Ô∏è‚É£ <b>–ó–Ω–∏–∂–∫–∞ 20% –Ω–∞ –∑–∞—Å–æ–±–∏ –¥–ª—è –ø—Ä–∏–±–∏—Ä–∞–Ω–Ω—è</b>\n"
        "   ‚Ä¢ ECO Baby Clean - 71.99 –≥—Ä–Ω –∑–∞–º—ñ—Å—Ç—å 89.99 –≥—Ä–Ω\n"
        "   ‚Ä¢ Glass Master Pro - 52.40 –≥—Ä–Ω –∑–∞–º—ñ—Å—Ç—å 65.50 –≥—Ä–Ω\n"
        "   ‚Ä¢ Multi-Surface Cleaner - 58.60 –≥—Ä–Ω –∑–∞–º—ñ—Å—Ç—å 73.25 –≥—Ä–Ω\n\n"
        "2Ô∏è‚É£ <b>–ö—É–ø–∏ 2 - –æ—Ç—Ä–∏–º–∞–π 3-–π –±–µ–∑–∫–æ—à—Ç–æ–≤–Ω–æ</b>\n"
        "   ‚Ä¢ –ù–∞ –≤—Å—é –∫–æ—Å–º–µ—Ç–∏–∫—É –¥–ª—è –æ–±–ª–∏—á—á—è\n"
        "   ‚Ä¢ –î—ñ—î –¥–æ –∫—ñ–Ω—Ü—è –º—ñ—Å—è—Ü—è\n\n"
        "3Ô∏è‚É£ <b>–ó–Ω–∏–∂–∫–∞ 15% –Ω–∞ –ø–∞—Ä—Ñ—É–º–∏</b>\n"
        "   ‚Ä¢ –ü—Ä–∏ –ø–æ–∫—É–ø—Ü—ñ –≤—ñ–¥ 500 –≥—Ä–Ω\n"
        "   ‚Ä¢ –ü—Ä–æ–º–æ–∫–æ–¥: PARFUM15\n\n"
        "4Ô∏è‚É£ <b>–ë–µ–∑–∫–æ—à—Ç–æ–≤–Ω–∞ –¥–æ—Å—Ç–∞–≤–∫–∞</b>\n"
        "   ‚Ä¢ –ü—Ä–∏ –∑–∞–º–æ–≤–ª–µ–Ω–Ω—ñ –≤—ñ–¥ 300 –≥—Ä–Ω\n"
        "   ‚Ä¢ –ü–æ –≤—Å—ñ–π –£–∫—Ä–∞—ó–Ω—ñ\n\n"
        "5Ô∏è‚É£ <b>–ü–æ–¥–≤—ñ–π–Ω—ñ –±–∞–ª–∏ –ª–æ—è–ª—å–Ω–æ—Å—Ç—ñ</b>\n"
        "   ‚Ä¢ 10% –∑–∞–º—ñ—Å—Ç—å 5% –∫–µ—à–±–µ–∫\n"
        "   ‚Ä¢ –ù–∞ –≤–∏—Ö—ñ–¥–Ω–∏—Ö\n\n"
        "‚è∞ <b>–ê–∫—Ü—ñ—ó –¥—ñ—é—Ç—å –æ–±–º–µ–∂–µ–Ω–∏–π —á–∞—Å!</b>"
    )
    
    await callback.message.edit_text(
        promotions_text,
        reply_markup=keyboard,
        parse_mode="HTML"
    )
    await callback.answer()

@router.callback_query(F.data == "points_history")
async def show_points_history(callback: CallbackQuery):
    """–ü–æ–∫–∞–∑–∞—Ç–∏ —ñ—Å—Ç–æ—Ä—ñ—é –±–∞–ª—ñ–≤"""
    from aiogram.types import InlineKeyboardMarkup, InlineKeyboardButton
    
    keyboard = InlineKeyboardMarkup(
        inline_keyboard=[
            [
                InlineKeyboardButton(text="üîô –ù–∞–∑–∞–¥ –¥–æ QR –∫–∞—Ä—Ç–∏", callback_data="back_to_qr")
            ]
        ]
    )
    
    history_text = (
        "üìä <b>–Ü—Å—Ç–æ—Ä—ñ—è –±–∞–ª—ñ–≤ –ª–æ—è–ª—å–Ω–æ—Å—Ç—ñ</b>\n\n"
        "üìà <b>–û—Å—Ç–∞–Ω–Ω—ñ –æ–ø–µ—Ä–∞—Ü—ñ—ó:</b>\n\n"
        "üü¢ +12 –±–∞–ª—ñ–≤ - –ü–æ–∫—É–ø–∫–∞ 15.01.2024\n"
        "   –ó–∞–º–æ–≤–ª–µ–Ω–Ω—è #001, —Å—É–º–∞ 245 –≥—Ä–Ω\n\n"
        "üü¢ +4 –±–∞–ª—ñ–≤ - –ü–æ–∫—É–ø–∫–∞ 12.01.2024\n"
        "   –ó–∞–º–æ–≤–ª–µ–Ω–Ω—è #002, —Å—É–º–∞ 89 –≥—Ä–Ω\n\n"
        "üî¥ -50 –±–∞–ª—ñ–≤ - –í–∏–∫–æ—Ä–∏—Å—Ç–∞–Ω–æ 10.01.2024\n"
        "   –ó–Ω–∏–∂–∫–∞ –Ω–∞ –∑–∞–º–æ–≤–ª–µ–Ω–Ω—è #003\n\n"
        "üíé <b>–ó–∞–≥–∞–ª—å–Ω–∞ —Å—Ç–∞—Ç–∏—Å—Ç–∏–∫–∞:</b>\n"
        "‚Ä¢ –í—Å—å–æ–≥–æ –Ω–∞—Ä–∞—Ö–æ–≤–∞–Ω–æ: 156 –±–∞–ª—ñ–≤\n"
        "‚Ä¢ –í–∏–∫–æ—Ä–∏—Å—Ç–∞–Ω–æ: 50 –±–∞–ª—ñ–≤\n"
        "‚Ä¢ –ü–æ—Ç–æ—á–Ω–∏–π –±–∞–ª–∞–Ω—Å: 106 –±–∞–ª—ñ–≤\n"
        "‚Ä¢ –ï–∫–æ–Ω–æ–º—ñ—è –∑–∞ –≤–µ—Å—å —á–∞—Å: 50 –≥—Ä–Ω\n\n"
        "üéØ –ü—Ä–æ–¥–æ–≤–∂—É–π—Ç–µ —Ä–æ–±–∏—Ç–∏ –ø–æ–∫—É–ø–∫–∏ —Ç–∞ –Ω–∞–∫–æ–ø–∏—á—É–π—Ç–µ –±–∞–ª–∏!"
    )
    
    await callback.message.edit_text(
        history_text,
        reply_markup=keyboard,
        parse_mode="HTML"
    )
    await callback.answer()

@router.callback_query(F.data == "back_to_qr")
async def back_to_qr_card(callback: CallbackQuery):
    """–ü–æ–≤–µ—Ä–Ω–µ–Ω–Ω—è –¥–æ QR –∫–∞—Ä—Ç–∏"""
    # –ü–æ–≤—Ç–æ—Ä—é—î–º–æ –ª–æ–≥—ñ–∫—É –∑ qr_card
    user_id = callback.from_user.id
    user_data = get_user_data(user_id)
    
    from utils.loyalty import get_user_loyalty_points
    loyalty_points = get_user_loyalty_points(user_id)
    
    qr_code = f"CW{user_id:08d}"
    
    from aiogram.types import InlineKeyboardMarkup, InlineKeyboardButton
    
    keyboard = InlineKeyboardMarkup(
        inline_keyboard=[
            [
                InlineKeyboardButton(text="üéü –ú–æ—ó –∫—É–ø–æ–Ω–∏", callback_data="my_coupons"),
                InlineKeyboardButton(text="üéÅ –ê–∫—Ü—ñ—ó", callback_data="show_promotions")
            ],
            [
                InlineKeyboardButton(text="üìä –Ü—Å—Ç–æ—Ä—ñ—è –±–∞–ª—ñ–≤", callback_data="points_history")
            ],
            [
                InlineKeyboardButton(text="üîô –ì–æ–ª–æ–≤–Ω–µ –º–µ–Ω—é", callback_data="back_to_menu")
            ]
        ]
    )
    
    qr_text = (
        f"üí≥ <b>–í–∞—à–∞ QR –∫–∞—Ä—Ç–∞ CleanWay</b>\n\n"
        f"üÜî –ù–æ–º–µ—Ä –∫–∞—Ä—Ç–∏: <code>{qr_code}</code>\n"
        f"üë§ –í–ª–∞—Å–Ω–∏–∫: {user_data.get('name', '–ù–µ –≤–∫–∞–∑–∞–Ω–æ')}\n"
        f"üìû –¢–µ–ª–µ—Ñ–æ–Ω: {user_data.get('phone', '–ù–µ –≤–∫–∞–∑–∞–Ω–æ')}\n\n"
        f"üíé <b>–í–∞—à—ñ –±–∞–ª–∏: {loyalty_points}</b>\n"
        f"üí∞ –ï–∫–≤—ñ–≤–∞–ª–µ–Ω—Ç: {loyalty_points} –≥—Ä–Ω –∑–Ω–∏–∂–∫–∏\n\n"
        f"üéØ <b>–ü—Ä–æ–≥—Ä–∞–º–∞ –ª–æ—è–ª—å–Ω–æ—Å—Ç—ñ:</b>\n"
        f"‚Ä¢ 5% –∫–µ—à–±–µ–∫ –∑ –∫–æ–∂–Ω–æ—ó –ø–æ–∫—É–ø–∫–∏\n"
        f"‚Ä¢ 1 –±–∞–ª = 1 –≥—Ä–Ω –∑–Ω–∏–∂–∫–∏\n"
        f"‚Ä¢ –°–ø–µ—Ü—ñ–∞–ª—å–Ω—ñ –ø—Ä–æ–ø–æ–∑–∏—Ü—ñ—ó –¥–ª—è VIP –∫–ª—ñ—î–Ω—Ç—ñ–≤\n\n"
        f"üì± –ü–æ–∫–∞–∂—ñ—Ç—å —Ü–µ–π QR –∫–æ–¥ –∫–∞—Å–∏—Ä—É –¥–ª—è –Ω–∞—Ä–∞—Ö—É–≤–∞–Ω–Ω—è –±–∞–ª—ñ–≤!"
    )
    
    await callback.message.edit_text(
        qr_text,
        reply_markup=keyboard,
        parse_mode="HTML"
    )
    await callback.answer()