from aiogram import Router, F
from aiogram.types import CallbackQuery, Message
from aiogram.fsm.context import FSMContext
from aiogram.fsm.state import State, StatesGroup
from aiogram.filters import StateFilter
from aiogram.types import ReplyKeyboardMarkup, KeyboardButton, ReplyKeyboardRemove

from utils.cart import get_user_cart, get_cart_total, clear_cart
from utils.orders import create_order
from utils.catalog import get_product_by_id
import os

router = Router()

class CheckoutState(StatesGroup):
    waiting_for_phone = State()
    waiting_for_address = State()
    waiting_for_payment_method = State()

@router.callback_query(F.data == "checkout")
async def start_checkout(callback: CallbackQuery, state: FSMContext):
    await callback.message.answer("üìû –í–≤–µ–¥—ñ—Ç—å –≤–∞—à –Ω–æ–º–µ—Ä —Ç–µ–ª–µ—Ñ–æ–Ω—É:", reply_markup=ReplyKeyboardRemove())
    await state.set_state(CheckoutState.waiting_for_phone)

@router.message(StateFilter(CheckoutState.waiting_for_phone))
async def get_phone(message: Message, state: FSMContext):
    await state.update_data(phone=message.text)
    await message.answer("üìç –í–≤–µ–¥—ñ—Ç—å –≤–∞—à—É –∞–¥—Ä–µ—Å—É –¥–æ—Å—Ç–∞–≤–∫–∏:")
    await state.set_state(CheckoutState.waiting_for_address)

@router.message(StateFilter(CheckoutState.waiting_for_address))
async def get_address(message: Message, state: FSMContext):
    await state.update_data(address=message.text)
    keyboard = ReplyKeyboardMarkup(
        keyboard=[
            [KeyboardButton(text="üí≥ LiqPay"), KeyboardButton(text="üí∞ WayForPay")],
        ],
        resize_keyboard=True,
        one_time_keyboard=True
    )
    await message.answer("üí≥ –û–±–µ—Ä—ñ—Ç—å —Å–ø–æ—Å—ñ–± –æ–ø–ª–∞—Ç–∏:", reply_markup=keyboard)
    await state.set_state(CheckoutState.waiting_for_payment_method)

@router.message(StateFilter(CheckoutState.waiting_for_payment_method))
async def confirm_order(message: Message, state: FSMContext):
    user_id = message.from_user.id
    payment_method = message.text
    cart_items = get_user_cart(user_id)
    total = get_cart_total(user_id)

    if not cart_items:
        await message.answer("üõí –í–∞—à –∫–æ—à–∏–∫ –ø–æ—Ä–æ–∂–Ω—ñ–π. –î–æ–¥–∞–π—Ç–µ —Ç–æ–≤–∞—Ä–∏ –ø–µ—Ä–µ–¥ –æ—Ñ–æ—Ä–º–ª–µ–Ω–Ω—è–º –∑–∞–º–æ–≤–ª–µ–Ω–Ω—è.")
        await state.clear()
        return

    data = await state.get_data()
    phone = data.get("phone")
    address = data.get("address")

    # –ó–±–µ—Ä—ñ–≥–∞—î–º–æ –∑–∞–º–æ–≤–ª–µ–Ω–Ω—è
    order_id = create_order(
        user_id=user_id,
        phone=phone,
        address=address,
        total=total,
        payment_method=payment_method
    )

    clear_cart(user_id)

    # –ü–æ–≤—ñ–¥–æ–º–ª–µ–Ω–Ω—è –∫–ª—ñ—î–Ω—Ç—É
    await message.answer(
        f"‚úÖ –ó–∞–º–æ–≤–ª–µ–Ω–Ω—è #{order_id} –ø—Ä–∏–π–Ω—è—Ç–æ!\n"
        f"üìû –¢–µ–ª–µ—Ñ–æ–Ω: {phone}\n"
        f"üìç –ê–¥—Ä–µ—Å–∞: {address}\n"
        f"üí∞ –û–ø–ª–∞—Ç–∞: {payment_method}\n"
        f"üí≥ –°—É–º–∞: {total} –≥—Ä–Ω",
        reply_markup=ReplyKeyboardRemove()
    )

    # –ü–æ–≤—ñ–¥–æ–º–ª–µ–Ω–Ω—è –∞–¥–º—ñ–Ω—É
    admin_id = int(os.getenv('ADMIN_ID', '8095681158'))
    
    # –§–æ—Ä–º—É—î–º–æ –¥–µ—Ç–∞–ª—å–Ω—É —ñ–Ω—Ñ–æ—Ä–º–∞—Ü—ñ—é –ø—Ä–æ —Ç–æ–≤–∞—Ä–∏
    items_text = ""
    for item in cart_items:
        product = get_product_by_id(item['product_id'])
        if product:
            item_total = product['price'] * item['quantity']
            items_text += f"‚Ä¢ {product['name']} - {item['quantity']} —à—Ç √ó {product['price']} –≥—Ä–Ω = {item_total} –≥—Ä–Ω\n"
    
    admin_text = (
        "üîî <b>–ù–æ–≤–µ –∑–∞–º–æ–≤–ª–µ–Ω–Ω—è!</b>\n\n"
        f"üìã –ó–∞–º–æ–≤–ª–µ–Ω–Ω—è: #{order_id}\n"
        f"üë§ –ö–æ—Ä–∏—Å—Ç—É–≤–∞—á: {message.from_user.first_name or '–ù–µ–≤—ñ–¥–æ–º–æ'} {message.from_user.last_name or ''}\n"
        f"üì± Username: @{message.from_user.username or '–Ω–µ–º–∞—î'}\n"
        f"üÜî ID: {user_id}\n"
        f"üìû –¢–µ–ª–µ—Ñ–æ–Ω: {phone}\n"
        f"üìç –ê–¥—Ä–µ—Å–∞: {address}\n"
        f"üõí –¢–æ–≤–∞—Ä–∏:\n{items_text}\n"
        f"üí∞ –û–ø–ª–∞—Ç–∞: {payment_method}\n"
        f"üí≥ –°—É–º–∞: {total} –≥—Ä–Ω"
    )

    try:
        await message.bot.send_message(chat_id=admin_id, text=admin_text, parse_mode="HTML")
        print(f"‚úÖ –ü–æ–≤—ñ–¥–æ–º–ª–µ–Ω–Ω—è –∞–¥–º—ñ–Ω—É –Ω–∞–¥—ñ—Å–ª–∞–Ω–æ —É—Å–ø—ñ—à–Ω–æ (ID: {admin_id})")
    except Exception as e:
        print(f"‚ùå –ù–µ –≤–¥–∞–ª–æ—Å—è –Ω–∞–¥—ñ—Å–ª–∞—Ç–∏ –ø–æ–≤—ñ–¥–æ–º–ª–µ–Ω–Ω—è –∞–¥–º—ñ–Ω—É (ID: {admin_id}): {e}")
        # –õ–æ–≥—É—î–º–æ –¥–µ—Ç–∞–ª—å–Ω—É –ø–æ–º–∏–ª–∫—É
        import traceback
        traceback.print_exc()

    await state.clear()
