from typing import List, Dict, Optional
from aiogram.types import InlineKeyboardMarkup, InlineKeyboardButton
from utils.catalog import get_product_by_id


def get_cart_keyboard(cart_items: List[Dict[str, int]]) -> InlineKeyboardMarkup:
    """
    –ö–ª–∞–≤—ñ–∞—Ç—É—Ä–∞ –¥–ª—è –∫–æ—à–∏–∫–∞ –∫–æ—Ä–∏—Å—Ç—É–≤–∞—á–∞.
    :param cart_items: —Å–ø–∏—Å–æ–∫ —Ç–æ–≤–∞—Ä—ñ–≤ —É –∫–æ—à–∏–∫—É (product_id, quantity)
    :return: –∫–ª–∞–≤—ñ–∞—Ç—É—Ä–∞ –∑ –∫–Ω–æ–ø–∫–∞–º–∏ –∑–º—ñ–Ω–∏ –∫—ñ–ª—å–∫–æ—Å—Ç—ñ, –≤–∏–¥–∞–ª–µ–Ω–Ω—è, –æ—Ñ–æ—Ä–º–ª–µ–Ω–Ω—è —ñ –æ—á–∏—â–µ–Ω–Ω—è
    """
    keyboard: List[List[InlineKeyboardButton]] = []
    
    # –ü–µ—Ä–µ–≤—ñ—Ä—è—î–º–æ —á–∏ —î —Ç–æ–≤–∞—Ä–∏ –≤ –∫–æ—à–∏–∫—É
    if not cart_items:
        return InlineKeyboardMarkup(inline_keyboard=[[
            InlineKeyboardButton(text="üîô –ü–æ–≤–µ—Ä–Ω—É—Ç–∏—Å—è –¥–æ –º–µ–Ω—é", callback_data="back_to_menu")
        ]])
    
    # –ö–Ω–æ–ø–∫–∏ –¥–ª—è –∫–æ–∂–Ω–æ–≥–æ —Ç–æ–≤–∞—Ä—É
    for item in cart_items:
        try:
            product_id = item.get("product_id")
            quantity = item.get("quantity", 0)
            
            # –ü–µ—Ä–µ–≤—ñ—Ä—è—î–º–æ –≤–∞–ª—ñ–¥–Ω—ñ—Å—Ç—å –¥–∞–Ω–∏—Ö
            if product_id is None or quantity <= 0:
                continue
                
            # –û—Ç—Ä–∏–º—É—î–º–æ —ñ–Ω—Ñ–æ—Ä–º–∞—Ü—ñ—é –ø—Ä–æ —Ç–æ–≤–∞—Ä –¥–ª—è –≤—ñ–¥–æ–±—Ä–∞–∂–µ–Ω–Ω—è –Ω–∞–∑–≤–∏
            product = get_product_by_id(product_id)
            if not product:
                continue
                
            # –û–±–º–µ–∂—É—î–º–æ –¥–æ–≤–∂–∏–Ω—É –Ω–∞–∑–≤–∏ —Ç–æ–≤–∞—Ä—É
            product_name = product.get('name', f'–¢–æ–≤–∞—Ä #{product_id}')
            if len(product_name) > 25:
                product_name = product_name[:22] + "..."
            
            # –†—è–¥–æ–∫ –∑ –Ω–∞–∑–≤–æ—é —Ç–æ–≤–∞—Ä—É
            keyboard.append([
                InlineKeyboardButton(
                    text=f"üì¶ {product_name}", 
                    callback_data=f"product_info_{product_id}"
                )
            ])
            
            # –†—è–¥–æ–∫ –∑ –∫–Ω–æ–ø–∫–∞–º–∏ —É–ø—Ä–∞–≤–ª—ñ–Ω–Ω—è –∫—ñ–ª—å–∫—ñ—Å—Ç—é
            row_buttons = []
            
            # –ö–Ω–æ–ø–∫–∞ –∑–º–µ–Ω—à–µ–Ω–Ω—è
            row_buttons.append(
                InlineKeyboardButton(text="‚ûñ", callback_data=f"cart_decrease_{product_id}")
            )
            
            # –ö–Ω–æ–ø–∫–∞ –∑ –∫—ñ–ª—å–∫—ñ—Å—Ç—é
            row_buttons.append(
                InlineKeyboardButton(
                    text=f"{quantity} —à—Ç", 
                    callback_data=f"cart_quantity_{product_id}"
                )
            )
            
            # –ö–Ω–æ–ø–∫–∞ –∑–±—ñ–ª—å—à–µ–Ω–Ω—è
            row_buttons.append(
                InlineKeyboardButton(text="‚ûï", callback_data=f"cart_increase_{product_id}")
            )
            
            # –ö–Ω–æ–ø–∫–∞ –≤–∏–¥–∞–ª–µ–Ω–Ω—è
            row_buttons.append(
                InlineKeyboardButton(text="üóë", callback_data=f"cart_remove_{product_id}")
            )
            
            keyboard.append(row_buttons)
                
        except (KeyError, TypeError, ValueError) as e:
            # –õ–æ–≥—É—î–º–æ –ø–æ–º–∏–ª–∫—É —Ç–∞ –ø—Ä–æ–ø—É—Å–∫–∞—î–º–æ –Ω–µ–∫–æ—Ä–µ–∫—Ç–Ω–∏–π —Ç–æ–≤–∞—Ä
            print(f"–ü–æ–º–∏–ª–∫–∞ –æ–±—Ä–æ–±–∫–∏ —Ç–æ–≤–∞—Ä—É –≤ –∫–æ—à–∏–∫—É: {e}")
            continue
    
    # –î–æ–¥–∞—î–º–æ —Ä–æ–∑–¥—ñ–ª—é–≤–∞—á –ø–µ—Ä–µ–¥ –∫–Ω–æ–ø–∫–∞–º–∏ –¥—ñ–π
    keyboard.append([
        InlineKeyboardButton(text="‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ", callback_data="separator_main")
    ])
    
    # –ö–Ω–æ–ø–∫–∞ –æ—Ñ–æ—Ä–º–ª–µ–Ω–Ω—è –∑–∞–º–æ–≤–ª–µ–Ω–Ω—è
    keyboard.append([
        InlineKeyboardButton(text="üßæ –û—Ñ–æ—Ä–º–∏—Ç–∏ –∑–∞–º–æ–≤–ª–µ–Ω–Ω—è", callback_data="checkout")
    ])
    
    # –†—è–¥–æ–∫ –∑ –¥–æ–¥–∞—Ç–∫–æ–≤–∏–º–∏ –¥—ñ—è–º–∏
    keyboard.append([
        InlineKeyboardButton(text="üóë –û—á–∏—Å—Ç–∏—Ç–∏ –∫–æ—à–∏–∫", callback_data="clear_cart")
    ])
    
    # –ö–Ω–æ–ø–∫–∞ –ø–æ–≤–µ—Ä–Ω–µ–Ω–Ω—è –¥–æ –º–µ–Ω—é
    keyboard.append([
        InlineKeyboardButton(text="üîô –ì–æ–ª–æ–≤–Ω–µ –º–µ–Ω—é", callback_data="back_to_menu")
    ])
    
    return InlineKeyboardMarkup(inline_keyboard=keyboard)


def get_checkout_keyboard() -> InlineKeyboardMarkup:
    """
    –ö–ª–∞–≤—ñ–∞—Ç—É—Ä–∞ –¥–ª—è –≤–∏–±–æ—Ä—É —Å–ø–æ—Å–æ–±—É –æ–ø–ª–∞—Ç–∏
    :return: –∫–ª–∞–≤—ñ–∞—Ç—É—Ä–∞ –∑ –≤–∞—Ä—ñ–∞–Ω—Ç–∞–º–∏ –æ–ø–ª–∞—Ç–∏ —ñ –∫–Ω–æ–ø–∫–æ—é –Ω–∞–∑–∞–¥
    """
    keyboard: List[List[InlineKeyboardButton]] = [
        # –°–ø–æ—Å–æ–±–∏ –æ–ø–ª–∞—Ç–∏
        [
            InlineKeyboardButton(text="üí≥ LiqPay", callback_data="pay_liqpay"),
            InlineKeyboardButton(text="üí∞ WayForPay", callback_data="pay_wayforpay")
        ],
        [
            InlineKeyboardButton(text="üíµ –ü—Ä–∏ –æ—Ç—Ä–∏–º–∞–Ω–Ω—ñ", callback_data="pay_cash")
        ],
        # –ù–∞–≤—ñ–≥–∞—Ü—ñ–π–Ω—ñ –∫–Ω–æ–ø–∫–∏
        [
            InlineKeyboardButton(text="üîô –ù–∞–∑–∞–¥ –¥–æ –∫–æ—à–∏–∫–∞", callback_data="back_to_cart"),
            InlineKeyboardButton(text="üè† –ì–æ–ª–æ–≤–Ω–µ –º–µ–Ω—é", callback_data="back_to_menu")
        ]
    ]
    
    return InlineKeyboardMarkup(inline_keyboard=keyboard)


def get_order_confirmation_keyboard(payment_method: Optional[str] = None) -> InlineKeyboardMarkup:
    """
    –ö–ª–∞–≤—ñ–∞—Ç—É—Ä–∞ –ø—ñ–¥—Ç–≤–µ—Ä–¥–∂–µ–Ω–Ω—è –∑–∞–º–æ–≤–ª–µ–Ω–Ω—è
    :param payment_method: –æ–±—Ä–∞–Ω–∏–π —Å–ø–æ—Å—ñ–± –æ–ø–ª–∞—Ç–∏
    """
    keyboard = [
        # –û—Å–Ω–æ–≤–Ω–∞ –∫–Ω–æ–ø–∫–∞ –ø—ñ–¥—Ç–≤–µ—Ä–¥–∂–µ–Ω–Ω—è
        [
            InlineKeyboardButton(
                text="‚úÖ –ü—ñ–¥—Ç–≤–µ—Ä–¥–∏—Ç–∏ –∑–∞–º–æ–≤–ª–µ–Ω–Ω—è", 
                callback_data=f"confirm_order_{payment_method}" if payment_method else "confirm_order"
            )
        ],
        # –ö–Ω–æ–ø–∫–∏ —Ä–µ–¥–∞–≥—É–≤–∞–Ω–Ω—è
        [
            InlineKeyboardButton(text="üí≥ –ó–º—ñ–Ω–∏—Ç–∏ –æ–ø–ª–∞—Ç—É", callback_data="checkout")
        ],
        # –ö–Ω–æ–ø–∫–∏ –Ω–∞–≤—ñ–≥–∞—Ü—ñ—ó
        [
            InlineKeyboardButton(text="üîô –ù–∞–∑–∞–¥ –¥–æ –∫–æ—à–∏–∫–∞", callback_data="back_to_cart"),
            InlineKeyboardButton(text="‚ùå –°–∫–∞—Å—É–≤–∞—Ç–∏ –∑–∞–º–æ–≤–ª–µ–Ω–Ω—è", callback_data="cancel_order")
        ]
    ]
    
    return InlineKeyboardMarkup(inline_keyboard=keyboard)


def get_order_cancel_confirmation_keyboard() -> InlineKeyboardMarkup:
    """–ö–ª–∞–≤—ñ–∞—Ç—É—Ä–∞ –ø—ñ–¥—Ç–≤–µ—Ä–¥–∂–µ–Ω–Ω—è —Å–∫–∞—Å—É–≤–∞–Ω–Ω—è –∑–∞–º–æ–≤–ª–µ–Ω–Ω—è"""
    keyboard = [
        [
            InlineKeyboardButton(text="‚ö†Ô∏è –í–∏ –≤–ø–µ–≤–Ω–µ–Ω—ñ?", callback_data="cancel_warning")
        ],
        [
            InlineKeyboardButton(text="‚úÖ –¢–∞–∫, —Å–∫–∞—Å—É–≤–∞—Ç–∏", callback_data="confirm_cancel_order"),
            InlineKeyboardButton(text="‚ùå –ù—ñ, –ø–æ–≤–µ—Ä–Ω—É—Ç–∏—Å—è", callback_data="back_to_cart")
        ]
    ]
    
    return InlineKeyboardMarkup(inline_keyboard=keyboard)
